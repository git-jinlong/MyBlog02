<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiao.blog.mapper.TagsMapper" >

  <resultMap id="BaseResultMap" type="com.xiao.blog.model.Tags" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
    <result column="update_data" property="updateData" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>

  <insert id="insert" parameterType="com.xiao.blog.model.Tags" >
    insert into blog_tags (id, `name`, create_date,
      update_data, user_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR},
      #{updateData,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER})
  </insert>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_tags where id = #{id,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.xiao.blog.model.Tags" >
    update blog_tags
    set
    `name` = #{name,jdbcType=VARCHAR},
    update_data = #{updateData,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getTagsList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select id, `name`
    from blog_tags
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <resultMap id="TagsVO" type="com.xiao.blog.vo.TagsVO" extends="BaseResultMap">
    <result column="article_count" property="articleCount" jdbcType="INTEGER" />
  </resultMap>
  <select id="getTagsVOList" resultMap="TagsVO" parameterType="java.lang.Integer">
    select
       tags.id,
       tags.name,
       tags.create_date,
       (CASE WHEN
       center_table.article_count is null THEN 0
       ELSE center_table.article_count END ) article_count
    from blog_tags tags
    left join
        (select count(article.id) article_count, bat.tags_id
            from blog_article article
            left join blog_article_tags bat on bat.article_id = article.id
            group by bat.tags_id) center_table on center_table.tags_id = tags.id
    where
    user_id = #{userId,jdbcType=INTEGER}
    order by id
  </select>
</mapper>